name: BoB Backend Pipeline-BUILD, JACOCO TEST REPORT, SONAR, DOCKER, DEPLOY

on:
  push:
    branches:
      - main
      - develop
    paths:
      - back/**
      - .github/workflows/backend-pipeline.yml

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
    backend-build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repo --> downloading the code resource
          uses: actions/checkout@v4

        - name: Build with Maven
          run: |
            cd back
            mvn clean 
            mvn install 

    jacoco-test-reporter:
        runs-on: ubuntu-latest
        needs: [backend-build]
        steps:
            - name: Checkout repo --> downloading the code resource
              uses: actions/checkout@v4

            - name: Run Jacoco Test Reporter
              run: |
                cd back
                mvn test jacoco:report

            - name: Upload Jacoco Test Report
              uses: actions/upload-artifact@v4
              with:
                name: jacoco-report
                path: back/target/site/jacoco
                retention-days: 1

            - name: JaCoCo Code Coverage Report
              id: jacoco_reporter
              uses: PavanMudigonda/jacoco-reporter@v5.0
              with:
                  coverage_results_path: back/target/site/jacoco/jacoco.xml
                  coverage_report_name: Coverage
                  coverage_report_title: JaCoCo
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  skip_check_run: false
                  minimum_coverage: 80
                  fail_below_threshold: false
                  publish_only_summary: false

            - name: Get the Coverage info
              run: |
                  echo "Coverage: ${{ steps.jacoco_reporter.outputs.coveragePercentage }}%"
                  echo "Coverage summary: ${{ steps.jacoco_reporter.outputs.coverageSummary }}"

    backend-sonar-cloud-analysis:
      name: Analyze BoB Backend With SonarCloud
      runs-on: ubuntu-latest
      needs: [backend-build, jacoco-test-reporter]
      steps:
        - uses: actions/checkout@v4

        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: 17
            distribution: 'zulu'
        - name: Cache SonarCloud packages
          uses: actions/cache@v3
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

        - name: Cache Maven packages
          uses: actions/cache@v3
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

        - name: Build and analyze
          working-directory: ./back
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=bob-backend-sonar-scanner -Dsonar.qualitygate.wait=true

    build-and-push-backend-docker-image:
      runs-on: ubuntu-latest
      needs: [backend-sonar-cloud-analysis]
      steps:
        - name: Checkout repo --> downloading the code resource
          uses: actions/checkout@v4

        - name: Build Docker Image
          uses: docker/build-push-action@v5
          with:
            context: ./back
            file: ./back/Dockerfile
            push: false
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bob-backend-api:latest

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Push Docker Image to Docker Hub
          uses: docker/build-push-action@v5
          with:
            context: ./back
            file: ./back/Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bob-backend-api:latest

    package-and-deploy-backend:
      runs-on: ubuntu-latest
      needs: [build-and-push-backend-docker-image]
      steps:
        - name: Checkout repo --> downloading the code resource
          uses: actions/checkout@v4

        - name: Package Backend
          run: |
            cd back
            mvn clean package
            
        - name: Deploy Backend
          run: echo "Deploying Backend API..."