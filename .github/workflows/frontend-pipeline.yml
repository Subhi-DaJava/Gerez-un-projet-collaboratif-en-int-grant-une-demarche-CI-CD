name: BoB Frontend Pipeline

on:
  push:
    branches:
      - main
      - develop
    paths:
      - front/**
      - .github/workflows/frontend-pipeline.yml

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
    frontend-build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repo --> downloading the code resource
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            cache: 'npm'
            cache-dependency-path: front/package-lock.json

        - name: Install dependencies
          run: |
            cd front
            npm ci

        - name: Build with npm
          run: |
            cd front
            npm run build

    frontend-unit-test:
      runs-on: ubuntu-latest
      needs: [frontend-build]
      steps:
        - name: Checkout repo --> downloading the code resource
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            cache: 'npm'
            cache-dependency-path: front/package-lock.json

        - name: Install dependencies
          run: |
            cd front
            npm ci

        - name: Run unit tests and Generate test coverage report
          run: |
            cd front
            npm run test:ci

    frontend-test-report:
        runs-on: ubuntu-latest
        needs: [frontend-unit-test]
        steps:
            - name: Checkout repo --> downloading the code resource
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                cache: 'npm'
                cache-dependency-path: front/package-lock.json

            - name: Install dependencies
              id: karma_reporter
              run: |
                cd front
                npm ci
                npm run test:ci

            - name: Upload test coverage report
              uses: actions/upload-artifact@v4
              with:
                name: test-report
                path: front/coverage/bobapp
                retention-days: 1

            - name: Get the Coverage info
              run: |
                echo "Coverage: ${{ steps.karma_reporter.outputs.coveragePercentage }}%"
                echo "Coverage summary: ${{ steps.karma_reporter.outputs.coverageSummary }}"

    frontend-sonar-cloud-analysis:
      name: Analyze Bob Frontend With SonarCloud
      runs-on: ubuntu-latest
      needs: [ frontend-build, frontend-unit-test, frontend-test-report]
      steps:
        - name: Checkout repo --> downloading the code resource
          uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

        - name: SetUp Node.js
          uses: actions/setup-node@v4
          with:
            cache: 'npm'
            cache-dependency-path: front/package-lock.json

        - name: Build project, Unit Tests and Coverage tests
          run: |
            cd front
            npm ci
            npm run test:ci

        - name: Cache SonarCloud packages
          uses: actions/cache@v3
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

        - name: SonarCloud Scan
          uses: SonarSource/sonarcloud-github-action@master
          with:
            projectBaseDir: front
            args: >
              -Dsonar.projectKey=bob-frontend-sonar-scanner
              -Dsonar.organization=subhi-dajava-1
              -Dsonar.sources=./src/app
              -Dsonar.qualitygate.wait=true
              -Dsonar.javascript.lcov.reportPaths=./coverage/bobapp/lcov.info
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    build-push-frontend-docker-image:
      runs-on: ubuntu-latest
      needs: [frontend-sonar-cloud-analysis]
      steps:
        - name: Checkout repo --> downloading the code resource
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            cache: 'npm'
            cache-dependency-path: front/package-lock.json

        - name: Build Docker Image
          uses: docker/build-push-action@v5
          with:
            context: ./front
            file: ./front/Dockerfile
            push: false
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bob-frontend:lastest

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Push Docker Image to Docker Hub
          uses: docker/build-push-action@v5
          with:
            context: ./front
            file: ./front/Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bob-frontend:lastest